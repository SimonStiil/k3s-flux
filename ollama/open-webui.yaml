---
apiVersion: v1
kind: Namespace
metadata:
  name: ollama
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: open-webui-pvc
  namespace: ollama
spec:
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-csi
---
apiVersion: v1
kind: Service
metadata:
  name: open-webui-tcp
  namespace: ollama
spec:
  type: ClusterIP
  ports:
  - name: web-ui
    protocol: TCP
    port: 8080
    targetPort: 8080
  selector:
    app: open-webui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-webui
  namespace: ollama
spec:
  selector:
    matchLabels:
      app: open-webui
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: open-webui
    spec:
      containers:
      - name: open-webui
        image: ghcr.io/open-webui/open-webui:v0.6.31
        imagePullPolicy: IfNotPresent
        env:
        - name: WEBUI_AUTH
          value: "True" # no need to login to Open WebUI
        - name: ENABLE_RAG_WEB_SEARCH
          value: "True"
        - name: OLLAMA_BASE_URL
          value: "http://ollama-ollama:11434"
        ports:
        - containerPort: 8080
          name: web-ui
        resources:
          limits:
            cpu: 16
            memory: 4Gi
          requests:
            cpu: 1
            memory: 1Gi
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /health
            port: web-ui
          initialDelaySeconds: 180
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: web-ui
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: data
          mountPath: /app/backend/data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: open-webui-pvc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ollama-ui
  namespace: ollama
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure,web
spec:
  ingressClassName: traefik
  rules:
  - host: ollama.${clusterdomain:=undefined}
    http:
      paths:
      - backend:
          service:
            name: open-webui-tcp
            port:
              number: 8080
        path: /
        pathType: Prefix